[env]
RUST_TEST_THREADS = "1"

### Entry points:
# cargo make test-and-clean # will start test docker, run tests, cargo fmt, cargo clippy, build doc, and clean docker
# cargo make full-integration-tests # will run tests as in CI

[tasks.delay-5-secs]
command = "sleep"
args = [ "5" ]

### Tasks for local docker management

[tasks.start-test-docker]
condition_script = [
    "! docker inspect -f '{{.State.Running}}' mlflow-test"
]
command = "docker"
args = ["run", "--name", "mlflow-test", "-d", "--rm", "-v", "/tmp/mlruns:/mlflow/", "-p", "5000:5000", "mockersf/mlflow-test"]

[tasks.stop-test-docker]
condition_script = [
    "docker inspect -f '{{.State.Running}}' mlflow-test"
]
command = "docker"
args = ["stop", "mlflow-test"]

[tasks.clean-test-docker]
command = "rm"
args = ["-rf", "/tmp/mlruns"]

[tasks.restart-test-docker]
ignore_errors = true
dependencies = [
    "stop-test-docker",
    "clean-test-docker",
    "start-test-docker"
]

### Tasks for local tests

[tasks.test]
env = { MLFLOW_PATH = "/tmp/mlruns" }
command = "cargo"
args = ["test", "--features=integration-tests"]

[tasks.test-nocapture]
env = { MLFLOW_PATH = "/tmp/mlruns" }
command = "cargo"
args = ["test", "--features=integration-tests", "--", "--nocapture"]

[tasks.test-and-clean]
ignore_errors = true
dependencies = [
    "start-test-docker",
    "delay-5-secs",
    "test-nocapture",
    "format",
    "clippy",
    "restart-test-docker",
    "docs"
]

### Tasks for CI tests (also works locally)

[tasks.full-integration-tests]
dependencies = [
    "pre-coverage",
    "delay-5-secs",
    "full-integration-tests-run",
    "post-coverage"
]

[tasks.debug-env.env]
MLFLOW_PATH = "${CARGO_MAKE_WORKING_DIRECTORY}/tmp/mlflow"
MLFLOW_URL = "http://localhost:5050"
[tasks.debug-env]
script = [
'''
set -ex
whoami
pwd
ls -lrtha
echo $CARGO_MAKE_WORKING_DIRECTORY
echo $MLFLOW_PATH
echo $GITHUB_WORKSPACE
ls $MLFLOW_PATH
touch $MLFLOW_PATH/test_file
mkdir -p $MLFLOW_PATH/tmp/./mlruns/16/a2c1bec997f049c19f9713f324d87478/artifacts/l5IBlJ4LevcVYGZhHGturiAfijxJsl
'''
]
dependencies = [
    "pre-coverage"
]


[tasks.full-integration-tests-run.env]
MLFLOW_PATH = "${CARGO_MAKE_WORKING_DIRECTORY}/tmp/mlflow"
MLFLOW_URL = "http://localhost:5050"
[tasks.full-integration-tests-run]
command = "cargo"
args = [ "test", "--features=integration-tests", "--", "--nocapture" ]

[tasks.test-verbose]
# change config of existing task
clear = true
dependencies = ["full-integration-tests"]

[tasks.pre-coverage]
# add pre-coverage config to start docker
command = "docker"
args = [
    "run", "-d", "--rm",
    "-p", "5050:5000",
    "-v", "${CARGO_MAKE_WORKING_DIRECTORY}/tmp/mlflow:/mlflow/",
    "--name", "mlflow-full-integration-tests",
    "mockersf/mlflow-test"
]

[tasks.post-coverage]
# add post-coverage config to stop docker
command = "docker"
args = ["stop", "mlflow-full-integration-tests"]

[tasks.coverage-kcov.env]
# override environment of coverage-kcov task
CARGO_MAKE_KCOV_INCLUDE_PATTERN = "${CARGO_MAKE_WORKING_DIRECTORY}/src/"
MLFLOW_PATH = "${CARGO_MAKE_WORKING_DIRECTORY}/tmp/mlflow"
MLFLOW_URL = "http://localhost:5050"
