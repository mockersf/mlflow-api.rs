[env]
RUST_TEST_THREADS = "1"

[config]
on_error_task = "stop-full-integration-docker"

[tasks.stop-full-integration-docker]
ignore_errors = true
script = [
    "docker stop mlflow-full-integration-tests"
]

[tasks.test]
command = "cargo"
args = ["test", "--features=integration-tests"]

[tasks.full-integration-tests]
script = [
'''
PORT=$(( ((RANDOM<<15)|RANDOM) % 63001 + 2000 ))
docker run -d --rm -p $PORT:5000 --name mlflow-full-integration-tests mockersf/mlflow-test
sleep 5
MLFLOW_URL="http://localhost:$PORT" cargo test --features=integration-tests -- --include-ignored -Zunstable-options
docker stop mlflow-full-integration-tests
'''
]

[tasks.start-test-docker]
command = "docker"
args = ["run", "--name", "mlflow-test", "-d", "--rm", "-v", "/tmp/mlruns:/mlflow/", "-p", "5000:5000", "mockersf/mlflow-test"]

[tasks.stop-test-docker]
command = "docker"
args = ["stop", "mlflow-test"]

[tasks.clean-test-docker]
command = "rm"
args = ["-rf", "/tmp/mlruns"]

[tasks.restart-test-docker]
ignore_errors = true
dependencies = [
    "stop-test-docker",
    "clean-test-docker",
    "start-test-docker"
]

[tasks.test-verbose]
clear = true
dependencies = ["full-integration-tests"]

[tasks.pre-coverage]
command = "docker"
args = ["run", "-d", "--rm", "-p", "5000:5000", "--name", "mlflow-full-integration-tests-coverage", "mockersf/mlflow-test"]

[tasks.post-coverage]
command = "docker"
args = ["stop", "mlflow-full-integration-tests-coverage"]
